{"version":3,"sources":["store.js","Comp.js","App.js","index.js"],"names":["observable","count","setCount","this","Comp","props","state","text","nextProps","console","log","toJS","app","el","document","getElementById","innerText","nextState","setState","prevProps","className","id","onClick","Component","inject","observer","App","store","rootElement","ReactDOM","render"],"mappings":"4MAUeA,cATD,CACZC,MAAO,EAEPC,SAHY,WAKVC,KAAKF,OAAS,K,cCIZG,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAHS,E,uDAOnB,SAAoBC,GAClBC,QAAQC,IAAI,kBAAmBC,YAAKH,EAAUI,KAAMD,YAAKR,KAAKE,MAAMO,MACpE,IAAMC,EAAKC,SAASC,eAAe,SACnCN,QAAQC,IAAI,SAAUG,EAAGG,a,gCAG3B,SAAmBR,EAAWS,GAC5BR,QAAQC,IACN,iBACAC,YAAKH,EAAUI,KACfD,YAAKR,KAAKE,MAAMO,KAChBK,EACAd,KAAKG,OAEP,IAAMO,EAAKC,SAASC,eAAe,SACnCN,QAAQC,IAAI,UAAWG,EAAGG,WACtBC,EAAUV,OAASM,EAAGG,WACxBb,KAAKe,SAAS,CACZX,KAAMM,EAAGG,c,uCAKf,SAA0BG,GACxBV,QAAQC,IAAI,cAAeC,YAAKQ,EAAUP,KAAMD,YAAKR,KAAKE,MAAMO,Q,oBAGlE,WAAU,IAAD,OACP,OACE,sBAAKQ,UAAU,MAAf,UACE,qBAAIC,GAAG,QAAP,oBAAuBlB,KAAKE,MAAMO,IAAIX,SACtC,wCAAWE,KAAKG,MAAMC,QACtB,wBAAQe,QAAS,kBAAM,EAAKjB,MAAMO,IAAIV,YAAtC,wB,GAxCWqB,aA8CJC,cAAO,MAAPA,CAAcC,YAASrB,ICjDhCsB,E,kDACJ,WAAYrB,GAAQ,uCACZA,G,0CAGR,WACE,OACE,cAAC,IAAD,CAAUO,IAAKe,EAAf,SACE,cAAC,EAAD,U,GARUJ,aAcHE,cAASC,GCTlBE,EAAcd,SAASC,eAAe,QAC5Cc,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFF,K","file":"static/js/main.752dfc40.chunk.js","sourcesContent":["import { observable } from \"mobx\";\nconst Store = {\n  count: 1,\n  // prev: 1,\n  setCount() {\n    // this.prev = this.count;\n    this.count += 1;\n  }\n};\n\nexport default observable(Store);\n","import \"./styles.css\";\nimport React, { Component } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport { toJS } from \"mobx\";\nimport { useLocalObservable, Observer } from \"mobx-react-lite\";\n\n// const test = useLocalObservable(() => {\n\n// });\n\nclass Comp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  componentWillUpdate(nextProps) {\n    console.log(\"will update == \", toJS(nextProps.app), toJS(this.props.app));\n    const el = document.getElementById(\"count\");\n    console.log(\"el == \", el.innerText);\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    console.log(\n      \"did update == \",\n      toJS(nextProps.app),\n      toJS(this.props.app),\n      nextState,\n      this.state\n    );\n    const el = document.getElementById(\"count\");\n    console.log(\"del == \", el.innerText);\n    if (nextState.text !== el.innerText) {\n      this.setState({\n        text: el.innerText\n      });\n    }\n  }\n\n  componentWillReceiveProps(prevProps) {\n    console.log(\"receive == \", toJS(prevProps.app), toJS(this.props.app));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 id=\"count\">count: {this.props.app.count}</h1>\n        <h1>text: {this.state.text}</h1>\n        <button onClick={() => this.props.app.setCount()}>add</button>\n      </div>\n    );\n  }\n}\n\nexport default inject(\"app\")(observer(Comp));\n","import \"./styles.css\";\nimport React, { Component } from \"react\";\nimport { inject, observer, Provider } from \"mobx-react\";\nimport { toJS } from \"mobx\";\nimport store from \"./store\";\nimport Comp from \"./Comp.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Provider app={store}>\n        <Comp />\n      </Provider>\n    );\n  }\n}\n\nexport default observer(App);\n","// import moduleAlias from \"module-alias\";\nimport { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\n// moduleAlias.addAlias({\n//   \"@root\": __dirname\n// });\n\n// console.log(moduleAlias);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}